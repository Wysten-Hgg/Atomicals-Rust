warning: unused manifest key: profile.release.wasm-opt
    Checking atomicals-rs v0.1.0 (/mnt/d/atom/atomicalsR)
warning: unused import: `Arc20Token`
 --> src/operations/mint_ft.rs:1:54
  |
1 | use crate::types::{AtomicalsTx, arc20::{Arc20Config, Arc20Token}};
  |                                                      ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `MintConfig` and `MintResult`
 --> src/operations/mint_ft.rs:2:39
  |
2 | use crate::types::mint::{BitworkInfo, MintConfig, MintResult};
  |                                       ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `wasm_bindgen::prelude::*`
  --> src/operations/mint_ft.rs:14:5
   |
14 | use wasm_bindgen::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bitcoin::Script`
 --> src/types/atomicals.rs:3:5
  |
3 | use bitcoin::Script;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `bitcoin::Transaction`
  --> src/types/mod.rs:15:5
   |
15 | use bitcoin::Transaction;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> src/types/mod.rs:16:13
   |
16 | use serde::{Serialize, Deserialize};
   |             ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `Promise`
 --> src/wallet/web/unisat.rs:7:32
  |
7 | use js_sys::{Function, Object, Promise, Reflect, Array};
  |                                ^^^^^^^

warning: unused import: `console`
  --> src/wallet/web/wizz.rs:10:23
   |
10 | use web_sys::{window, console};
   |                       ^^^^^^^

warning: unused import: `crate::types::AtomicalsTx`
 --> src/wallet/mod.rs:7:5
  |
7 | use crate::types::AtomicalsTx;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `MintConfig`
 --> src/wasm/mod.rs:2:33
  |
2 | use crate::types::{Arc20Config, MintConfig};
  |                                 ^^^^^^^^^^

warning: unused import: `serde_json::Value`
 --> src/wasm/mod.rs:6:5
  |
6 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `Transaction`, `TxIn`, and `TxOut`
 --> src/utils/tx_size.rs:1:15
  |
1 | use bitcoin::{Transaction, TxIn, TxOut, ScriptBuf};
  |               ^^^^^^^^^^^  ^^^^  ^^^^^

warning: variant `P2SH_P2WPKH` should have an upper camel case name
  --> src/utils/tx_size.rs:74:5
   |
74 |     P2SH_P2WPKH, // Nested SegWit
   |     ^^^^^^^^^^^ help: convert the identifier to upper camel case: `P2shP2wpkh`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: unused variable: `mining_opts`
   --> src/operations/mint_ft.rs:188:21
    |
188 |     if let Some(ref mining_opts) = mining_options {
    |                     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mining_opts`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: use of deprecated method `bitcoin::Script::is_v0_p2wpkh`: use is_p2wpkh instead
  --> src/utils/tx_size.rs:81:26
   |
81 |         } else if script.is_v0_p2wpkh() {
   |                          ^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: unused import: `Serialize`
  --> src/wallet/web/wizz.rs:12:26
   |
12 | use serde::{Deserialize, Serialize};
   |                          ^^^^^^^^^

warning: unused variable: `script_type`
  --> src/operations/mint_ft.rs:47:13
   |
47 |         let script_type = ScriptType::from_script(&utxo.txout.script_pubkey)
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_script_type`

warning: unused variable: `account_str`
   --> src/wallet/web/wizz.rs:125:13
    |
125 |         let account_str: String = from_value(account)?;
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_account_str`

warning: unused variable: `promise`
   --> src/wallet/web/wizz.rs:153:27
    |
153 |                 if let Ok(promise) = JsFuture::from(connect_result.unchecked_into::<Promise>()).await {
    |                           ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_promise`

warning: unused variable: `commit_psbt`
  --> src/wallet/mod.rs:40:49
   |
40 |     async fn sign_atomicals_transactions(&self, commit_psbt: Psbt, reveal_psbt: Psbt) -> Result<(Transaction, Transaction)> {
   |                                                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_commit_psbt`

warning: unused variable: `reveal_psbt`
  --> src/wallet/mod.rs:40:68
   |
40 |     async fn sign_atomicals_transactions(&self, commit_psbt: Psbt, reveal_psbt: Psbt) -> Result<(Transaction, Transaction)> {
   |                                                                    ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_reveal_psbt`

warning: field `cache` is never read
  --> src/wallet/web/wizz.rs:21:5
   |
18 | struct UtxoResponse {
   |        ------------ field in this struct
...
21 |     cache: bool,
   |     ^^^^^
   |
   = note: `UtxoResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: fields `atomicals` and `global` are never read
  --> src/wallet/web/wizz.rs:26:5
   |
25 | struct ResponseData {
   |        ------------ fields in this struct
26 |     atomicals: Value,
   |     ^^^^^^^^^
27 |     global: GlobalInfo,
   |     ^^^^^^
   |
   = note: `ResponseData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `atomical_count`, `height`, `network`, `server_time`, and `other` are never read
  --> src/wallet/web/wizz.rs:33:5
   |
32 | struct GlobalInfo {
   |        ---------- fields in this struct
33 |     atomical_count: u32,
   |     ^^^^^^^^^^^^^^
34 |     height: u32,
   |     ^^^^^^
35 |     network: String,
   |     ^^^^^^^
36 |     server_time: String,
   |     ^^^^^^^^^^^
37 |     #[serde(flatten)]
38 |     other: Value,
   |     ^^^^^
   |
   = note: `GlobalInfo` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `index` is never read
  --> src/wallet/web/wizz.rs:47:5
   |
42 | struct UtxoItem {
   |        -------- field in this struct
...
47 |     index: u32,
   |     ^^^^^
   |
   = note: `UtxoItem` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `block_size`, `block_vsize`, `n_tx`, `total_fees`, and `fee_range` are never read
  --> src/wallet/web/wizz.rs:55:5
   |
53 | struct MempoolBlock {
   |        ------------ fields in this struct
54 |     #[serde(rename = "blockSize")]
55 |     block_size: f64,
   |     ^^^^^^^^^^
56 |     #[serde(rename = "blockVSize")]
57 |     block_vsize: f64,
   |     ^^^^^^^^^^^
58 |     #[serde(rename = "nTx")]
59 |     n_tx: u32,
   |     ^^^^
60 |     #[serde(rename = "totalFees")]
61 |     total_fees: f64,
   |     ^^^^^^^^^^
...
65 |     fee_range: Vec<f64>,
   |     ^^^^^^^^^
   |
   = note: `MempoolBlock` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `account` is never read
  --> src/wallet/web/wizz.rs:72:5
   |
70 | pub struct WizzProvider {
   |            ------------ field in this struct
71 |     wallet: Object,
72 |     account: Option<String>,
   |     ^^^^^^^
   |
   = note: `WizzProvider` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `atomicals-rs` (lib) generated 27 warnings (run `cargo fix --lib -p atomicals-rs` to apply 12 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 10.03s
