/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_miningoptions_free: (a: number, b: number) => void;
export const __wbg_get_miningoptions_num_workers: (a: number) => number;
export const __wbg_set_miningoptions_num_workers: (a: number, b: number) => void;
export const __wbg_get_miningoptions_batch_size: (a: number) => number;
export const __wbg_set_miningoptions_batch_size: (a: number, b: number) => void;
export const miningoptions_new: () => number;
export const mine_nonce_range: (a: number, b: number, c: number, d: number, e: number) => number;
export const mine_transaction: (a: number, b: number, c: number) => any;
export const __wbg_wasmtransaction_free: (a: number, b: number) => void;
export const wasmtransaction_to_hex: (a: number) => [number, number];
export const wasmtransaction_from_hex: (a: number, b: number) => number;
export const __wbg_wasmbitworkinfo_free: (a: number, b: number) => void;
export const wasmbitworkinfo_new: (a: number, b: number, c: number, d: number) => number;
export const wasmbitworkinfo_get_difficulty: (a: number) => [number, number];
export const wasmbitworkinfo_get_prefix: (a: number) => [number, number];
export const wasmbitworkinfo_get_ext: (a: number) => [number, number];
export const wasmbitworkinfo_set_ext: (a: number, b: number, c: number) => void;
export const __wbg_unisatprovider_free: (a: number, b: number) => void;
export const unisatprovider_try_new: () => [number, number, number];
export const __wbg_wizzprovider_free: (a: number, b: number) => void;
export const wizzprovider_try_new: () => [number, number, number];
export const __wbg_atomicalswasm_free: (a: number, b: number) => void;
export const atomicalswasm_try_new: () => [number, number, number];
export const atomicalswasm_mint_ft: (a: number, b: number, c: number, d: bigint, e: number, f: number, g: number, h: number, i: number, j: number) => any;
export const wasmtransaction_new: (a: number, b: number) => number;
export const rustsecp256k1_v0_9_2_context_create: (a: number) => number;
export const rustsecp256k1_v0_9_2_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_9_2_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_9_2_default_error_callback_fn: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_export_5: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_table_dealloc: (a: number) => void;
export const closure5_externref_shim: (a: number, b: number, c: any) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h34ced8d1dcb0005d: (a: number, b: number) => void;
export const closure229_externref_shim: (a: number, b: number, c: any) => void;
export const closure288_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
